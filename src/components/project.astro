---
import ChipLink from "./ChipLink.astro";
interface Props {
    visible?: boolean;
    title?: string;
    projectTag1?: string;
    projectTag2?: string;
    projectTag3?: string;
    projectTag4?: string;
    projectTag5?: string;
    projectTag6?: string;

    secondTitle?: string;
    description?: string;

    collaboration?: string;
    collaborationName1?: string;
    collaborationName1Link?: string;
    collaborationmid?: string;
    collaborationName2?: string;
    collaborationName2Link?: string;
    collaborationend?: string;

    noimage?: boolean;
    image?: string;
    imagelink?: string;

    url1?: string;
    chipType1?: string;
    chipTypeColor1?: string;
    chipText1?: string;

    url2?: string;
    chipType2?: string;
    chipTypeColor2?: string;
    chipText2?: string;

    url3?: string;
    chipType3?: string;
    chipTypeColor3?: string;
    chipText3?: string;
}

const {
    visible = true,
    title = "",
    projectTag1 = "",
    projectTag2 = "",
    projectTag3 = "",
    projectTag4 = "",
    projectTag5 = "",
    projectTag6 = "",
    description = "",

    collaborationName1 = "",
    collaborationName1Link = "",
    collaborationmid = "",
    collaborationName2 = "",
    collaborationName2Link = "",
    collaborationend = "",

    noimage = false,
    image = "",

    url1 = "",
    imagelink = url1,
    chipType1 = "",
    chipTypeColor1 = "",
    chipText1 = "",

    url2 = "",
    chipType2 = "",
    chipTypeColor2 = "",
    chipText2 = "",

    url3 = "",
    chipType3 = "",
    chipTypeColor3 = "",
    chipText3 = ""

} = Astro.props;
const noImage = !image;
---
{visible && (
<div class={`project-container ${noimage ? "project-container-noimage" : ""}`}>
    <div class="project-description">
        <h2>
            {title}
        </h2>
        <p class="project-tag">
            {projectTag1 && projectTag1}
            {projectTag2 && ', ' + projectTag2}
            {projectTag3 && ', ' + projectTag3}
            {projectTag4 && ', ' + projectTag4}
            {projectTag5 && ', ' + projectTag5}
            {projectTag6 && ', ' + projectTag6}
        </p>
        <p class="project-description-text">{description}
            {collaborationName1Link && (
                    <>
                        In collaboration with
                        <a href={`${collaborationName1Link}`}
                           target="_blank">{collaborationName1}</a> {collaborationmid}
                        <a href={`${collaborationName2Link}`}
                           target="_blank">{collaborationName2}</a> {collaborationend}
                    </>
            )}
        </p>
        <div class="linkchipContainer">
            <div>
                {url1 &&
                        <ChipLink chipType={chipType1} chipText={chipText1} chipTypeColor={chipTypeColor1} url={url1} ?
                                  {url1} :
                                  {}
                                  urlNewTab=true iconRight="/assets/arrow-right.svg" backgroundColor={chipTypeColor1}/>}
            </div>
            <div>
                {url2 &&
                        <ChipLink chipType={chipType2} chipText={chipText2} chipTypeColor={chipTypeColor2} url={url2} ?
                                  {url2} :
                                  {}
                                  urlNewTab=true iconRight="/assets/arrow-right.svg" backgroundColor={chipTypeColor2}/>}
            </div>
            <div>
                {url3 &&
                        <ChipLink chipType={chipType3} chipText={chipText3} chipTypeColor={chipTypeColor3} url={url3} ?
                                  {url3} :
                                  {}
                                  urlNewTab=true iconRight="/assets/arrow-right.svg" backgroundColor={chipTypeColor3}/>}
            </div>
        </div>
    </div>
    { image ? (
        imagelink ? (
        <a className="imageLink" href={imagelink} target="_blank" rel="noopener noreferrer">
            <img src={image} alt={title} className="selectDisable"/>
        </a>
            ) : (
        <img src={image} alt={title} className="selectDisable"/>
            )
        ) : null }
        </div>
        )}

<style>
    .project-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin: 1.5rem 0.5rem 0 0.5rem;
        padding: 0 2rem 0rem 2rem;
        border-radius: 3rem;
        background-color: white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .project-container img {
        border-radius: 1rem;
        max-height: 12rem;
        aspect-ratio: 16 / 9;
        float: right;
    }

    .project-container a:has(img) {
        display: inline-block;
        margin: 0;
        padding: 0;
        line-height: 0;
    }

    .project-container a img {
        display: block;
        filter: grayscale(0.6);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        transition: transform 0.15s ease-in, border-radius 0.1s ease-in, box-shadow 0.3s linear, filter 0.5s linear;
    }

    .project-container a:hover img {
        transform: scale(1.015);
        filter: grayscale(0);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
        border-radius: 1.15rem;
    }

    .imageLink {
        margin: 0 !important;
        padding: 0 !important;
    }

    .project-container h2 {
        margin: 0;
        padding: 0;
        padding-top: 2rem;
    }

    .project-container p {
        margin: 0;
        padding: 1rem 0;
    }


    .project-description-text {
        margin-top: 1.2rem !important;
    }

    p.project-tag {
        color: rgba(0, 0, 0, 0.65);
        font-size: 1rem;
        margin: 0;
        padding: 0 !important;
    }

    @media (min-width: 1280px) {
        .project-container {
            display: grid;
            grid-template-columns: 3fr 2fr;
            gap: 1rem;
        }

        .project-container img {
            margin-left: auto;
            max-height: 16rem;
        }

        .project-container-noimage {
            display: grid;
            grid-template-columns: 1fr;
        }
    }

    @media (max-width: 1280px) {
        .project-container {
            border-radius: 1rem;
        }

        .project-container h2 {
            font-size: 2rem;
        }

        .project-container img {
            display: block;
            border-radius: 0.5rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            transition: transform 0.15s ease-in, border-radius 0.1s ease-in, box-shadow 0.3s linear;
            width: auto;
            filter: grayscale(0) !important;
        }

        .project-container a:has(img) {
            padding-bottom: 0.5rem;
        }

        .project-container a:hover img {
            transform: scale(1.015);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
            border-radius: 0.75rem;

        }
    }

    .linkchipContainer {
        display: flex;
        flex-direction: column;
        gap: 0.3rem;
        margin: 1rem 0;
    }

</style>