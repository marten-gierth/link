---
import ChipLink from "./ChipLink.astro";
interface Props {
    visible?: boolean;
    title?: string;
    projectTags?: string[];
    description?: string;
    collaborations?: { name: string; link: string }[];
    image?: string;
    imagelink?: string;
    links?: { url: string; chipType: string; chipColor: string; chipText: string }[];
}

const {
    visible = true,
    title = "",
    projectTags = [],
    description = "",
    collaborations = [],
    image = "",
    links = [],
} = Astro.props;

const collabText = collaborations
    .map((collab) => `<a href="${collab.link}" target="_blank">${collab.name}</a>`)
    .join(" and ");

const linksArray = links.map((link) => ({
    url: link.url,
    chipType: link.chipType,
    chipColor: link.chipColor,
    chipText: link.chipText
}));

const imagelink = links.length > 0 ? links[0].url : "";
---
{visible && (
<div class={image?.trim() ? "project-container" : "project-container-noimage"}>
    <div class="project-description">
        <h2>
            {title}
        </h2>
        <p class="project-tag">
            <span>{projectTags.join(", ")}</span>
        </p>
        <p class="project-description-text"
           set:html={`${description}${collaborations.length > 0 ? ` In collaboration with ${collabText}.` : ""}`}></p>

        {linksArray.length > 0 && (
                <div class="linkchipContainer">
                    {linksArray.map((link) => (
                            <div>
                                <ChipLink
                                        chipType={link.chipType}
                                        chipText={link.chipText}
                                        chipTypeColor={link.chipColor}
                                        url={link.url}
                                        urlNewTab={true}
                                        iconRight="/assets/arrow-right.svg"
                                        backgroundColor={link.chipColor}
                                />
                            </div>
                    ))}
                </div>
        )}
    </div>

    {image && (
        imagelink ? (
                <a class="imageLink" href={imagelink} target="_blank" rel="noopener noreferrer">
                    <img src={image} alt={title}/>
                </a>
        ) : (
                <img src={image} alt={title}/>
        )
    )}
</div>
    )}

<style>
    .project-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin: 1.5rem 0.5rem 0 0.5rem;
        padding: 0 2rem 0rem 2rem;
        border-radius: 3rem;
        background-color: white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .project-container img {
        border-radius: 1rem;
        max-height: 12rem;
        aspect-ratio: 16 / 9;
        float: right;
    }

    .project-container a:has(img) {
        display: inline-block;
        margin: 0;
        padding: 0;
        line-height: 0;
    }

    .project-container a img {
        display: block;
        filter: grayscale(0.6);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        transition: transform 0.15s ease-in, border-radius 0.1s ease-in, box-shadow 0.3s linear, filter 0.5s linear;
    }

    .project-container a:hover img {
        transform: scale(1.015);
        filter: grayscale(0);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
        border-radius: 1.15rem;
    }

    .imageLink {
        margin: 0 !important;
        padding: 0 !important;
    }

    .project-container h2 {
        margin: 0;
        padding: 0;
        padding-top: 2rem;
    }

    .project-container p {
        margin: 0;
        padding: 1rem 0;
    }

    .project-description-text {
        margin-top: 1.2rem !important;
    }

    p.project-tag {
        color: rgba(0, 0, 0, 0.65);
        font-size: 1rem;
        margin: 0;
        padding: 0 !important;
    }

    @media (min-width: 1280px) {
        .project-container {
            display: grid;
            grid-template-columns: 3fr 2fr;
            gap: 1rem;
        }

        .project-container img {
            margin-left: auto;
            max-height: 16rem;
        }

        .project-container-noimage {
            display: grid;
            grid-template-columns: 1fr;
        }
    }

    .project-container-noimage {
        display: flex;
        flex-direction: column;
        margin: 1.5rem 0.5rem 0 0.5rem;
        padding: 0 2rem 0 2rem;
        border-radius: 3rem;
        background-color: white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    @media (max-width: 1280px) {
        .project-container {
            border-radius: 1rem;
        }

        .project-container h2 {
            font-size: 2rem;
        }

        .project-container-noimage h2 {
            font-size: 2rem;
        }

        .project-container img {
            display: block;
            border-radius: 0.5rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            transition: transform 0.15s ease-in, border-radius 0.1s ease-in, box-shadow 0.3s linear;
            width: auto;
            filter: grayscale(0) !important;
        }

        .project-container a:has(img) {
            padding-bottom: 0.5rem;
        }

        .project-container a:hover img {
            transform: scale(1.015);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
            border-radius: 0.75rem;
        }
    }

    .linkchipContainer {
        display: flex;
        flex-direction: column;
        gap: 0.3rem;
        margin: 1rem 0;
    }
</style>