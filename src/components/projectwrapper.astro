---
import Project from "../components/project.astro";
import projects from "../data/projects.json";

// Extract unique categories and years
const categories = Array.from(new Set(projects.map((p) => p.category)));
const years = Array.from(new Set(projects.map((p) => new Date(p.date).getFullYear()))).sort().reverse();

// Count the number of projects for each category and year combination
const projectCounts = projects.reduce((acc, project) => {
    const year = new Date(project.date).getFullYear();
    const category = project.category;

    // Count for category
    if (!acc[category]) acc[category] = {};
    if (!acc[category][year]) acc[category][year] = 0;
    acc[category][year]++;

    return acc;
}, {});
---

<!-- Dropdown for Category Filter -->
<select id="categoryFilter">
    <option value="all">All Categories</option>
    {categories.map((category) => (
            <option value={category}>
                {category}
                ({Object.keys(projectCounts[category]).reduce((sum, year) => sum + projectCounts[category][year], 0)})
            </option>
    ))}
</select>

<!-- Dropdown for Year Filter -->
<select id="yearFilter">
    <option value="all">All Years</option>
    {years.map((year) => (
            <option value={year}>{year}</option>
    ))}
</select>

<!-- Reset Filter Button (hidden when both filters are "all") -->
<button id="resetFilterButton" style="display: none;">Reset Filter</button>

<!-- No Projects Message -->
<p id="noProjectsMessage" style="display: none;">Sorry, no projects are available for the selected filters.</p>

<div id="project-list">
    {projects.map((project) => (
            <div class="project-item" data-category={project.category} data-year={new Date(project.date).getFullYear()}>
                <Project
                        visible={project.visible}
                        title={project.title}
                        projectTags={project.projectTags}
                        description={project.description}
                        image={project.image}
                        collaborations={project.collaborations}
                        links={project.links}
                />
            </div>
    ))}
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const urlParams = new URLSearchParams(window.location.search);
        const selectedCategory = urlParams.get('category') || 'all';
        const selectedYear = urlParams.get('year') || 'all';

        const categoryFilter = document.getElementById("categoryFilter");
        const yearFilter = document.getElementById("yearFilter");
        const resetFilterButton = document.getElementById("resetFilterButton");
        const noProjectsMessage = document.getElementById("noProjectsMessage");

        // Set the filters based on the URL parameters
        categoryFilter.value = selectedCategory;
        yearFilter.value = selectedYear;

        // Function to filter projects
        function filterProjects(category, year) {
            let visibleProjects = 0;

            // Filter and show only the matching projects
            document.querySelectorAll(".project-item").forEach((item) => {
                const projectCategory = item.dataset.category;
                const projectYear = item.dataset.year;

                if ((category === "all" || projectCategory === category) &&
                    (year === "all" || projectYear == year)) {
                    item.style.display = "block";
                    visibleProjects++;
                } else {
                    item.style.display = "none";
                }
            });

            // Show or hide the "No Projects Available" message based on visible projects
            if (visibleProjects === 0) {
                noProjectsMessage.style.display = "block";
            } else {
                noProjectsMessage.style.display = "none";
            }
        }

        // Filter projects on initial load
        filterProjects(selectedCategory, selectedYear);

        // Function to update the URL and filter projects
        function updateFilterAndURL() {
            const newCategory = categoryFilter.value;
            const newYear = yearFilter.value;
            const newUrl = new URL(window.location);

            // Remove category and year from the URL if they are "all"
            if (newCategory === 'all') newUrl.searchParams.delete("category");
            else newUrl.searchParams.set("category", newCategory);

            if (newYear === 'all') newUrl.searchParams.delete("year");
            else newUrl.searchParams.set("year", newYear);

            window.history.pushState({}, "", newUrl);

            filterProjects(newCategory, newYear);

            // Show or hide the reset button based on filters
            if (newCategory === "all" && newYear === "all") {
                resetFilterButton.style.display = "none";
            } else {
                resetFilterButton.style.display = "inline-block";
            }
        }

        // Update URL and filter projects when category or year changes
        categoryFilter.addEventListener("change", updateFilterAndURL);
        yearFilter.addEventListener("change", updateFilterAndURL);

        // Reset the filters when the reset button is clicked
        resetFilterButton.addEventListener("click", function () {
            // Reset dropdown values to "all"
            categoryFilter.value = "all";
            yearFilter.value = "all";

            // Clear URL parameters for category and year
            const newUrl = new URL(window.location);
            newUrl.searchParams.delete("category");
            newUrl.searchParams.delete("year");
            window.history.pushState({}, "", newUrl);

            // Show all projects
            filterProjects("all", "all");

            // Hide the reset button
            resetFilterButton.style.display = "none";
        });

        // Show the reset button if there are any applied filters
        if (selectedCategory !== 'all' || selectedYear !== 'all') {
            resetFilterButton.style.display = 'inline-block';
        }
    });
</script>

<style>
select, button {
    margin: 0.17rem 0 0.17rem 0.17rem;
    padding: .3rem 0.6rem;
    font-size: 1.1rem;
    border-radius: 1rem;
    border: 1px solid var(--color-text);
    background-color: white;
    font-family: 'Inter', sans-serif;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
#resetFilterButton {
    background-color: var(--color-text);
    color: white;
    border: 1px solid var(--color-text);
    cursor: pointer;
}

</style>