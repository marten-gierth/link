---
import Project from "../components/project.astro";
import projects from "../data/projects.json";

// Extrahiere eindeutige Kategorien und Jahre
const categories = Array.from(new Set(projects.map((p) => p.category)));
const years = Array.from(new Set(projects.map((p) => new Date(p.date).getFullYear()))).sort();
---

<!-- Dropdown für Kategorie-Filter -->
<select id="categoryFilter">
    <option value="all">All Categories</option>
    {categories.map((category) => (
            <option value={category}>{category}</option>
    ))}
</select>

<!-- Dropdown für Jahres-Filter -->
<select id="yearFilter">
    <option value="all">All Years</option>
    {years.map((year) => (
            <option value={year}>{year}</option>
    ))}
</select>

<div id="project-list">
    {projects.map((project) => (
            <div class="project-item" data-category={project.category} data-year={new Date(project.date).getFullYear()}>
                <span>{project.category}</span>
                <span>{new Date(project.date).getFullYear()}</span>
                <Project
                        visible={project.visible}
                        title={project.title}
                        projectTags={project.projectTags}
                        description={project.description}
                        image={project.image}
                        collaborations={project.collaborations}
                        links={project.links}
                />
            </div>
    ))}
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // URL-Parameter auslesen
        const urlParams = new URLSearchParams(window.location.search);
        const selectedCategory = urlParams.get('category') || 'all';
        const selectedYear = urlParams.get('year') || 'all';

        // Setze die Filter-Dropdowns basierend auf der URL
        const categoryFilter = document.getElementById("categoryFilter");
        const yearFilter = document.getElementById("yearFilter");

        categoryFilter.value = selectedCategory;
        yearFilter.value = selectedYear;

        // Projekte filtern basierend auf Kategorie und Jahr
        document.querySelectorAll(".project-item").forEach((item) => {
            const projectCategory = item.dataset.category;
            const projectYear = item.dataset.year;

            item.style.display =
                (selectedCategory === "all" || projectCategory === selectedCategory) &&
                (selectedYear === "all" || projectYear === selectedYear)
                    ? "block"
                    : "none";
        });

        // Wenn ein Filter geändert wird, URL aktualisieren und Projekte filtern
        categoryFilter.addEventListener("change", function () {
            const newCategory = categoryFilter.value;
            const newYear = yearFilter.value;
            const newUrl = new URL(window.location);
            newUrl.searchParams.set("category", newCategory);
            newUrl.searchParams.set("year", newYear);
            window.history.pushState({}, "", newUrl);

            filterProjects(newCategory, newYear);
        });

        yearFilter.addEventListener("change", function () {
            const newCategory = categoryFilter.value;
            const newYear = yearFilter.value;
            const newUrl = new URL(window.location);
            newUrl.searchParams.set("category", newCategory);
            newUrl.searchParams.set("year", newYear);
            window.history.pushState({}, "", newUrl);

            filterProjects(newCategory, newYear);
        });

        // Funktion zum Filtern der Projekte
        function filterProjects(category, year) {
            document.querySelectorAll(".project-item").forEach((item) => {
                const projectCategory = item.dataset.category;
                const projectYear = item.dataset.year;

                item.style.display =
                    (category === "all" || projectCategory === category) &&
                    (year === "all" || projectYear === year)
                        ? "block"
                        : "none";
            });
        }
    });
</script>